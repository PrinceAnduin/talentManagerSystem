<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.tema.mapper.JobRequestMapper" >
    <resultMap id="BaseResultMap" type="com.tema.entities.JobRequest" >
    	<id column="id" property="id" jdbcType="INTEGER" />
        <result column="acceptance" property="acceptance" jdbcType="BOOLEAN"/>
        <result column="delete" property="delete" jdbcType="BOOLEAN"/>
        <result column="finalAcceptance" property="finalAcceptance" jdbcType="BOOLEAN" />
        <association property="user" javaType="com.tema.entities.User">
        	<id column="userId" property="id" />
        	<result column="user_name" property="name" jdbcType="VARCHAR" />
        	<result column="user_phone" property="phone" jdbcType="VARCHAR"/>
        	<result column="user_gender" property="gender" jdbcType="SMALLINT"/>
        	<result column="user_birth" property="birth" jdbcType="DATE"/>
        	<result column="user_email" property="email" jdbcType="VARCHAR" />
        </association>
        <association property="job" javaType="com.tema.entities.Job">
        	<id column="jobId" property="id" />
        	<result column="job_name" property="name" jdbcType="VARCHAR" />
       		<result column="job_description" property="description" jdbcType="VARCHAR"/>
        	<result column="job_needsNum" property="needsNum" jdbcType="INTEGER" />
        	<result column="job_nowNum" property="nowNum" jdbcType="INTEGER" />
        </association>
        <association property="resume" javaType="com.tema.entities.Resume">
        	<id column="resumeId" property="id" jdbcType="INTEGER" />
        	<result column="resume_address" property="address" jdbcType="VARCHAR"/>
        </association>
    </resultMap>
    
    <sql id="Base_Column_List" >
        jobRequest.id, jobRequest.userId, jobRequest.jobId, jobRequest.resumeId, jobRequest.acceptance, jobRequest.finalAcceptance, jobRequest.delete, 
        users.name as user_name, users.phone as user_phone, users.gender as user_gender, users.birth as user_birth, users.email as user_email, resumes.address as resume_address,
        job.name as job_name, job.description as job_description, job.needsNum as job_needsNum, job.nowNum as job_nowNum
    </sql>
    
    <insert id="insert" parameterType="com.tema.entities.JobRequest" >
       INSERT INTO 
       		jobRequest
       		(userId, jobId, resumeId, acceptance, finalAcceptance) 
       	VALUES
       		(#{user.id}, #{job.id}, #{resume.id}, #{acceptance}, #{finalAcceptance})
    </insert>
    
    <select id="findReceviePage" resultMap="BaseResultMap" >
       SELECT 
       <include refid="Base_Column_List" />
	   FROM company, job, jobRequest, resumes, users
	   WHERE company.id = #{companyId} and company.id = job.companyId and jobRequest.jobId = job.id and resumes.id = resumeId and users.id = resumes.userId and jobRequest.delete = false
	   ORDER BY jobRequest.id
	   limit #{pageSize} offset #{pageNo}
    </select>
    
   <select id="findReceviePageByAcctance" resultMap="BaseResultMap" >
       SELECT 
       <include refid="Base_Column_List" />
	   FROM company, job, jobRequest, resumes, users
	   WHERE company.id = #{companyId} and company.id = job.companyId and jobRequest.jobId = job.id and resumes.id = resumeId and users.id = resumes.userId and jobRequest.delete = false and jobRequest.acceptance = false
	   ORDER BY jobRequest.id
	   limit #{pageSize} offset #{pageNo}
    </select>
    
    <select id="findReceviePageByFinalAcctance" resultMap="BaseResultMap" >
       SELECT 
       <include refid="Base_Column_List" />
	   FROM company, job, jobRequest, resumes, users
	   WHERE company.id = #{companyId} and company.id = job.companyId and jobRequest.jobId = job.id and resumes.id = resumeId and users.id = resumes.userId and jobRequest.delete = false and jobRequest.acceptance = true and jobRequest.finalAcceptance = false 
	   ORDER BY jobRequest.id
	   limit #{pageSize} offset #{pageNo}
    </select>
    
    <select id="findSendPage" resultMap="BaseResultMap" >
       SELECT 
       <include refid="Base_Column_List" />
	   FROM company, job, jobRequest, resumes, users
	   WHERE users.id = #{userId} and company.id = job.companyId and jobRequest.jobId = job.id and resumes.id = resumeId and users.id = resumes.userId
	   ORDER BY jobRequest.id
	   limit #{pageSize} offset #{pageNo}
    </select>
    
    <update id="setRequestAcceptcance">
    	UPDATE 
    	jobRequest
    	SET
    	acceptance = #{acceptance}
    	where
    	id = #{id}
    </update>
    
    <update id="setFinalAcceptcance">
    	UPDATE 
    	jobRequest
    	SET
    	finalAcceptance = #{finalAcceptance}
    	where
    	id = #{id}
    </update>
    
    <update id="setDelete">
    	UPDATE 
    	jobRequest
    	SET
    	delete = #{delete}
    	where
    	id = #{id}
    </update>
    
    <select id="getUserId" resultType="Integer" >
       SELECT 
       userId
	   FROM jobRequest
	   WHERE jobRequest.id = #{id}
    </select>
    
   <select id="getJobId" resultType="Integer" >
       SELECT 
       jobId
	   FROM jobRequest
	   WHERE jobRequest.id = #{id}
    </select>
    
    <select id="getCompanyId" resultType="Integer" >
       SELECT 
       companyId
	   FROM jobRequest
	   WHERE jobRequest.id = #{id}
    </select>
    
    <update id="setAllDelete">
    	UPDATE
    	jobRequest
    	SET
    	delete = true
    	WHERE
    	id != #{id} and userId = (select userId from jobRequest where id = #{id})
    </update>
</mapper>